//
//  CloudLogicAPIInvokeViewController.m
//  MySampleApp
//
//
// Copyright 2017 Amazon.com, Inc. or its affiliates (Amazon). All Rights Reserved.
//
// Code generated by AWS Mobile Hub. Amazon gives unlimited permission to 
// copy, distribute and modify it.
//
// Source code generated from template: aws-my-sample-app-ios-objc v0.15
//

#import "CloudLogicAPIInvokeViewController.h"
#import "CloudLogicAPI.h"
#import "AWSAPIGateway/AWSAPIGateway.h"

static NSString *HTTPMethodGet = @"GET";
static NSString *HTTPMethodHead = @"HEAD";

@interface CloudLogicAPIInvokeViewController ()

@property (nonatomic, strong) CloudLogicAPI *cloudLogicAPI;
@property (nonatomic, strong) NSString *methodPathValue;
@property (nonatomic, strong) NSString *methodNameValue;
@property (nonatomic, strong) NSString *apiEndpointValue;

@end

@implementation CloudLogicAPIInvokeViewController

-(void)viewDidLoad {
    [super viewDidLoad];
    self.navigationItem.backBarButtonItem = [[UIBarButtonItem alloc] initWithTitle:@"Back"
                                                                             style:UIBarButtonItemStylePlain
                                                                            target:nil
                                                                            action:nil];
    self.methodPath.text = self.methodPathValue;
    self.methodName.text = self.methodNameValue;
    self.apiEndpoint.text = self.apiEndpointValue;
    
    // Request Body are not supported on GET http method by API Gateway
    if ([self.methodNameValue isEqualToString:HTTPMethodGet] ||
        [self.methodNameValue isEqualToString:HTTPMethodHead]) {
        self.requestBody.text = nil;
        self.requestBodyLabel.hidden = YES;
        self.requestBody.hidden = YES;
    }
}

- (IBAction)onClear:(UIButton *)sender {
    self.requestBody.text = @"";
    self.queryStringParameters.text = @"";
    self.apiResponse.text = @"";
    self.statusLabel.text = @"";
    self.responseTimeLabel.text = @"";
}

- (IBAction)onReset:(UIButton *)sender {
    NSString *defaultRequestBody = @"{ \n  \"key1\":\"value1\", \n  \"key2\":\"value2\", \n  \"key3\":\"value3\"\n}";
    NSString *defaultQueryStringParameters = @"?lang=en";
    self.requestBody.text = defaultRequestBody;
    self.queryStringParameters.text = defaultQueryStringParameters;
    self.apiResponse.text = @"";
    self.statusLabel.text = @"";
    self.responseTimeLabel.text = @"";
}

- (NSString *)makeJsonable:(NSString *)input {
    NSArray *resultComponents = [input componentsSeparatedByCharactersInSet:[NSCharacterSet newlineCharacterSet]];
    return [resultComponents componentsJoinedByString:@""];
}

- (IBAction)onInvokeApi:(id)sender {
    NSDictionary *headerParameters = @{
                                       @"Content-Type": @"application/json",
                                       @"Accept": @"application/json",
                                       };
    
    NSDictionary<NSString *, NSString *> *parameters;
    NSMutableDictionary<NSString *, NSString *> *queryParameters = [[NSMutableDictionary alloc] init];
    
    // check if the query string begins with a `?`
    if ([self.queryStringParameters.text hasPrefix:@"?"]) {
        // remove first character, i.e. `?`
        NSString *queryString = [self.queryStringParameters.text substringFromIndex:1];
        NSArray<NSString *> *keyValuePairStringArray = [queryString componentsSeparatedByString:@"&"];
        // check if there are any key value pairs
        if ([keyValuePairStringArray count] > 0) {
            for (NSString *keyValuePairString in keyValuePairStringArray) {
                NSArray<NSString *> *keyValue = [keyValuePairString componentsSeparatedByString:@"="];
                if ([keyValue count] == 2) {
                    [queryParameters setValue:keyValue[1] forKey:keyValue[0]];
                } else if ([keyValue count] == 1) {
                    [queryParameters setValue:@"" forKey:keyValue[0]];
                } else {
                    NSLog(@"Discarding query string for request: query string malformed.");
                }
            }
        }
    } else {
        NSLog(@"Discarding query string for request: query string must begin with a `?`.");
    }
    
    NSError *jsonError = nil;
    
    // Parse HTTP Body for methods apart from GET / HEAD
    if (![self.methodNameValue isEqualToString:HTTPMethodGet] &&
        ![self.methodNameValue isEqualToString:HTTPMethodHead]) {
        if (self.requestBody.text.length != 0) {
            NSString *jsonInput = [self makeJsonable:self.requestBody.text];
            NSData *jsonData = [jsonInput dataUsingEncoding:NSUTF8StringEncoding];
            parameters = [NSJSONSerialization JSONObjectWithData:jsonData
                                                         options:NSJSONReadingAllowFragments
                                                           error:&jsonError];
        }
    }
    
    if (jsonError) {
        self.apiResponse.text = @" JSON request is not well-formed for HTTP Body";
        self.statusLabel.text = @"";
        self.responseTimeLabel.text = @"";
        return;
    }
    
    NSDate *startTime = [NSDate date];
    
    AWSAPIGatewayRequest *apiRequest = [[AWSAPIGatewayRequest alloc] initWithHTTPMethod:self.methodName.text
                                                                              URLString:self.methodPath.text
                                                                        queryParameters:queryParameters
                                                                       headerParameters:headerParameters
                                                                               HTTPBody:parameters];
    [[self.cloudLogicAPI.apiClient invoke:apiRequest] continueWithBlock:^id(AWSTask *task) {
        NSTimeInterval timeInterval = [[NSDate date] timeIntervalSinceDate:startTime];
        
        if (task.error) {
            NSLog(@"Error occurred: %@", task.error);
            dispatch_async(dispatch_get_main_queue(), ^{
                self.apiResponse.text = [NSString stringWithFormat: @"Error occurred while trying to invoke API: %@", task.error];
                self.statusLabel.text = @"";
                self.responseTimeLabel.text = @"";
            });
            return task.error;
        }
        
        AWSAPIGatewayResponse *response = (AWSAPIGatewayResponse *)task.result;
        NSString *responseString = [[NSString alloc] initWithData:response.responseData encoding:NSUTF8StringEncoding];
        NSString *statusCode = [NSString stringWithFormat: @"%ld", (long)response.statusCode];
        NSLog(@"Response: %@", responseString);
        NSLog(@"Status Code: %@", statusCode);
        
        dispatch_async(dispatch_get_main_queue(), ^{
            self.statusLabel.text = statusCode;
            self.apiResponse.text = responseString;
            self.responseTimeLabel.text = [NSString stringWithFormat:@"%.3f s", timeInterval];
        });
        
        return nil;
    }];
}

@end
